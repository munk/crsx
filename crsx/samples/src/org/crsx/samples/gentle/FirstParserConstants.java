/* Generated By:JavaCC: Do not edit this line. FirstParserConstants.java */
package org.crsx.samples.gentle;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface FirstParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int T_meta1_T_M_INT = 1;
  /** RegularExpression Id. */
  int T_meta2_T_M_INT = 6;
  /** RegularExpression Id. */
  int T_meta1_T_M_FLOAT = 8;
  /** RegularExpression Id. */
  int T_meta2_T_M_FLOAT = 13;
  /** RegularExpression Id. */
  int T_meta1_T_M_ID = 15;
  /** RegularExpression Id. */
  int T_meta2_T_M_ID = 20;
  /** RegularExpression Id. */
  int T_meta1_T_M_Exp = 27;
  /** RegularExpression Id. */
  int T_meta2_T_M_Exp = 32;
  /** RegularExpression Id. */
  int T_meta1_T_M_Name = 34;
  /** RegularExpression Id. */
  int T_meta2_T_M_Name = 39;
  /** RegularExpression Id. */
  int T_meta1_T_M_Stat = 46;
  /** RegularExpression Id. */
  int T_meta2_T_M_Stat = 51;
  /** RegularExpression Id. */
  int T_meta1_T_M_T = 53;
  /** RegularExpression Id. */
  int T_meta2_T_M_T = 58;
  /** RegularExpression Id. */
  int T_meta1_T_M_I_xProgr = 62;
  /** RegularExpression Id. */
  int T_meta2_T_M_I_xProgr = 67;
  /** RegularExpression Id. */
  int T_meta1_T_M_I_xInstr = 70;
  /** RegularExpression Id. */
  int T_meta2_T_M_I_xInstr = 75;
  /** RegularExpression Id. */
  int T_meta1_T_M_I_xArg = 77;
  /** RegularExpression Id. */
  int T_meta2_T_M_I_xArg = 82;
  /** RegularExpression Id. */
  int T_meta1_T_M_Tmp = 84;
  /** RegularExpression Id. */
  int T_meta2_T_M_Tmp = 89;
  /** RegularExpression Id. */
  int T_meta1_T_M_A_xProgr = 93;
  /** RegularExpression Id. */
  int T_meta2_T_M_A_xProgr = 98;
  /** RegularExpression Id. */
  int T_meta1_T_M_A_xInstr = 105;
  /** RegularExpression Id. */
  int T_meta2_T_M_A_xInstr = 110;
  /** RegularExpression Id. */
  int T_meta1_T_M_A_xArg = 115;
  /** RegularExpression Id. */
  int T_meta2_T_M_A_xArg = 120;
  /** RegularExpression Id. */
  int T_RAW_CONCRETE = 126;
  /** RegularExpression Id. */
  int T_RAW_TOKEN_INT = 128;
  /** RegularExpression Id. */
  int T_RAW_TOKEN_FLOAT = 129;
  /** RegularExpression Id. */
  int T_RAW_TOKEN_ID = 130;
  /** RegularExpression Id. */
  int T_RAW_TOKEN_Exp = 131;
  /** RegularExpression Id. */
  int T_RAW_TOKEN_Name = 132;
  /** RegularExpression Id. */
  int T_RAW_TOKEN_Stat = 133;
  /** RegularExpression Id. */
  int T_RAW_TOKEN_Type = 134;
  /** RegularExpression Id. */
  int T_RAW_TOKEN_Int = 135;
  /** RegularExpression Id. */
  int T_RAW_TOKEN_Float = 136;
  /** RegularExpression Id. */
  int T_RAW_TOKEN_Unif = 137;
  /** RegularExpression Id. */
  int T_RAW_TOKEN_Test = 138;
  /** RegularExpression Id. */
  int T_RAW_TOKEN_t = 139;
  /** RegularExpression Id. */
  int T_RAW_TOKEN_e = 140;
  /** RegularExpression Id. */
  int T_RAW_TOKEN_T = 141;
  /** RegularExpression Id. */
  int T_RAW_TOKEN_I_Progr = 142;
  /** RegularExpression Id. */
  int T_RAW_TOKEN_I_Instr = 143;
  /** RegularExpression Id. */
  int T_RAW_TOKEN_I_Arg = 144;
  /** RegularExpression Id. */
  int T_RAW_TOKEN_Tmp = 145;
  /** RegularExpression Id. */
  int T_RAW_TOKEN_TmpType = 146;
  /** RegularExpression Id. */
  int T_RAW_TOKEN_A_Progr = 147;
  /** RegularExpression Id. */
  int T_RAW_TOKEN_Compile = 148;
  /** RegularExpression Id. */
  int T_RAW_TOKEN_A_Instr = 149;
  /** RegularExpression Id. */
  int T_RAW_TOKEN_A_Arg = 150;
  /** RegularExpression Id. */
  int T_T_M_INT = 152;
  /** RegularExpression Id. */
  int T_T_M_FLOAT = 153;
  /** RegularExpression Id. */
  int T_T_M_ID = 154;
  /** RegularExpression Id. */
  int T_T_M_Digit = 155;
  /** RegularExpression Id. */
  int T_T_M_Lower = 156;
  /** RegularExpression Id. */
  int T_T_M_T = 157;
  /** RegularExpression Id. */
  int T_RAW_VARIABLE = 158;
  /** RegularExpression Id. */
  int T_RAW_META_VARIABLE = 159;
  /** RegularExpression Id. */
  int T_RAW_CONSTRUCTOR = 160;
  /** RegularExpression Id. */
  int T_RAW_LPAREN = 161;
  /** RegularExpression Id. */
  int T_RAW_RPAREN = 162;
  /** RegularExpression Id. */
  int T_RAW_LBRACKET = 163;
  /** RegularExpression Id. */
  int T_RAW_RBRACKET = 164;
  /** RegularExpression Id. */
  int T_RAW_LBRACE = 165;
  /** RegularExpression Id. */
  int T_RAW_RBRACE = 166;
  /** RegularExpression Id. */
  int T_RAW_COMMA = 167;
  /** RegularExpression Id. */
  int T_RAW_COLON = 168;
  /** RegularExpression Id. */
  int T_RAW_UP = 169;
  /** RegularExpression Id. */
  int T_RAW_DOWN = 170;
  /** RegularExpression Id. */
  int T_RAW_NOT = 171;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_META_T_M_INT = 1;
  /** Lexical state. */
  int IN_NESTED_META_T_M_INT = 2;
  /** Lexical state. */
  int IN_META_T_M_FLOAT = 3;
  /** Lexical state. */
  int IN_NESTED_META_T_M_FLOAT = 4;
  /** Lexical state. */
  int IN_META_T_M_ID = 5;
  /** Lexical state. */
  int IN_NESTED_META_T_M_ID = 6;
  /** Lexical state. */
  int IN_META_T_M_Exp = 7;
  /** Lexical state. */
  int IN_NESTED_META_T_M_Exp = 8;
  /** Lexical state. */
  int IN_META_T_M_Name = 9;
  /** Lexical state. */
  int IN_NESTED_META_T_M_Name = 10;
  /** Lexical state. */
  int IN_META_T_M_Stat = 11;
  /** Lexical state. */
  int IN_NESTED_META_T_M_Stat = 12;
  /** Lexical state. */
  int IN_META_T_M_T = 13;
  /** Lexical state. */
  int IN_NESTED_META_T_M_T = 14;
  /** Lexical state. */
  int IN_META_T_M_I_xProgr = 15;
  /** Lexical state. */
  int IN_NESTED_META_T_M_I_xProgr = 16;
  /** Lexical state. */
  int IN_META_T_M_I_xInstr = 17;
  /** Lexical state. */
  int IN_NESTED_META_T_M_I_xInstr = 18;
  /** Lexical state. */
  int IN_META_T_M_I_xArg = 19;
  /** Lexical state. */
  int IN_NESTED_META_T_M_I_xArg = 20;
  /** Lexical state. */
  int IN_META_T_M_Tmp = 21;
  /** Lexical state. */
  int IN_NESTED_META_T_M_Tmp = 22;
  /** Lexical state. */
  int IN_META_T_M_A_xProgr = 23;
  /** Lexical state. */
  int IN_NESTED_META_T_M_A_xProgr = 24;
  /** Lexical state. */
  int IN_META_T_M_A_xInstr = 25;
  /** Lexical state. */
  int IN_NESTED_META_T_M_A_xInstr = 26;
  /** Lexical state. */
  int IN_META_T_M_A_xArg = 27;
  /** Lexical state. */
  int IN_NESTED_META_T_M_A_xArg = 28;
  /** Lexical state. */
  int RAW = 29;
  /** Lexical state. */
  int RAW_CONCRETE = 30;
  /** Lexical state. */
  int NESTED_RAW_CONCRETE = 31;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<T_meta1_T_M_INT>",
    "<token of kind 2>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 7>",
    "<T_meta1_T_M_FLOAT>",
    "<token of kind 9>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 14>",
    "<T_meta1_T_M_ID>",
    "<token of kind 16>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 21>",
    "\"TA\"",
    "\"+\"",
    "\"*\"",
    "\"(\"",
    "\")\"",
    "<T_meta1_T_M_Exp>",
    "<token of kind 28>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 33>",
    "<T_meta1_T_M_Name>",
    "<token of kind 35>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 40>",
    "\"{\"",
    "\"}\"",
    "\"TA2\"",
    "\":=\"",
    "\";\"",
    "<T_meta1_T_M_Stat>",
    "<token of kind 47>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 52>",
    "<T_meta1_T_M_T>",
    "<token of kind 54>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 59>",
    "\"ICG\"",
    "\"ICGExp\"",
    "<T_meta1_T_M_I_xProgr>",
    "<token of kind 63>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 68>",
    "\"=\"",
    "<T_meta1_T_M_I_xInstr>",
    "<token of kind 71>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 76>",
    "<T_meta1_T_M_I_xArg>",
    "<token of kind 78>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 83>",
    "<T_meta1_T_M_Tmp>",
    "<token of kind 85>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 90>",
    "\"CG\"",
    "\"Compile\"",
    "<T_meta1_T_M_A_xProgr>",
    "<token of kind 94>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 99>",
    "\"ADDF\"",
    "\",\"",
    "\"LDF\"",
    "\"MULF\"",
    "\"STF\"",
    "<T_meta1_T_M_A_xInstr>",
    "<token of kind 106>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 111>",
    "\"#\"",
    "\"[\"",
    "\"]\"",
    "<T_meta1_T_M_A_xArg>",
    "<token of kind 116>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 121>",
    "\"\\u27e6\"",
    "\"\\u27e6\"",
    "\"\\u27e6\"",
    "\"\\u27e7\"",
    "\"\\u27e7\"",
    "<token of kind 127>",
    "\"INT\"",
    "\"FLOAT\"",
    "\"ID\"",
    "\"Exp\"",
    "\"Name\"",
    "\"Stat\"",
    "\"Type\"",
    "\"Int\"",
    "\"Float\"",
    "\"Unif\"",
    "\"Test\"",
    "\"t\"",
    "\"e\"",
    "\"T\"",
    "\"I_Progr\"",
    "\"I_Instr\"",
    "\"I_Arg\"",
    "\"Tmp\"",
    "\"TmpType\"",
    "\"A_Progr\"",
    "\"Compile\"",
    "\"A_Instr\"",
    "\"A_Arg\"",
    "<token of kind 151>",
    "<T_T_M_INT>",
    "<T_T_M_FLOAT>",
    "<T_T_M_ID>",
    "<T_T_M_Digit>",
    "<T_T_M_Lower>",
    "<T_T_M_T>",
    "<T_RAW_VARIABLE>",
    "<T_RAW_META_VARIABLE>",
    "<T_RAW_CONSTRUCTOR>",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\"{\"",
    "\"}\"",
    "\",\"",
    "\":\"",
    "\"\\u2191\"",
    "\"\\u2193\"",
    "\"\\u00ac\"",
    "<token of kind 172>",
  };

}
